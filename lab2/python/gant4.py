import matplotlib.pyplot as plt

# Surowe dane (skrócone dla przykładu — możesz wkleić pełne dane)
input_data = """
 j=1 | ██████████████████████████████████████████████████···························································································································································································
 j=2 | ································································································███████████████████████████████████████████████······························································································
 j=3 | ···················································███████████████████████████████████████████████████████···································································································································
 j=4 | ··················································██████████████████████████████████████████████·············································································································································
 j=5 | ···············································································································································████████████████████████████████······························································
 j=6 | ······················································································································█████████████████████████████████████████████████████████······························································
 j=7 | ································································································································································███████████████······························································
 j=8 | ···············································································································································································██████████████████████████████████████████████████████████████
"""

# Parsowanie danych
lines = [line.strip() for line in input_data.strip().split("\n")]
tasks = []

for line in lines:
    if '|' in line:
        label, timeline = line.split('|')
        label = label.strip()
        timeline = timeline.strip()

        start = None
        for i, char in enumerate(timeline):
            if char == '█' and start is None:
                start = i
            elif char != '█' and start is not None:
                tasks.append((label, start, i - start))
                start = None
        if start is not None:
            tasks.append((label, start, len(timeline) - start))

# Tworzenie wykresu Gantta
fig, ax = plt.subplots(figsize=(14, 6))

yticks = []
yticklabels = []
labels_seen = set()
max_time = 0

for i, (label, start, duration) in enumerate(reversed(tasks)):
    y_pos = int(label.split('=')[1]) - 1  # j=1 -> 0
    yticks.append(y_pos)
    yticklabels.append(label)
    ax.broken_barh([(start, duration)], (y_pos - 0.4, 0.8),
                   facecolors='tab:blue')
    if start + duration > max_time:
        max_time = start + duration

ax.axvline(x=max_time, color='red', linestyle='--', linewidth=2)
ax.text(max_time - 13, - 1.2, f'Czas końcowy: {max_time}', color='red', fontsize=10)


# Ustawienia osi i siatki
ax.set_xlabel("Czas")
ax.set_ylabel("Zdanie")
ax.set_yticks(sorted(set(yticks)))
ax.set_yticklabels(sorted(set(yticklabels), key=lambda x: int(x.split('=')[1])))
ax.grid(True)
plt.tight_layout()
plt.savefig("./plots/zad4.png")
